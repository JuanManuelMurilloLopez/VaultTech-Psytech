<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analisis Colores</title>

    <!-- Bootstrap CSS -->
    <link href=
    "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
    rel="stylesheet">


    <!-- Link css -->
    <link rel="stylesheet" href="/css/psicologos/analisisColores.css">
    <!-- CSS navside -->
    <link rel="stylesheet" href="/css/includeCss/_navsidePsicologo.css">
    <!-- CSS cerrar sesión -->
    <link rel="stylesheet" href="/css/includeCss/_buttonCerrarSesion.css">

</head>
<body class="">
    <div class="main">
        <%- include('../includes/_navsidePsicologo.ejs') %>
        <div class="container">
            <%- include('../includes/_buttonCerrarSesion.ejs') %>
            <h1 class="text-center">Analisis Prueba Colores</h1> <br>
            <div class="row">
                <h3 class="fw-bolder">Personalidad y Adaptación al medio</h3>
            </div>
            
            <div class="row g-4 align-items-start">
                <div class="col-md-7">
                    <canvas id="graficaMixta"></canvas>
                </div>
                <div class="col-md-5">
                    <div class="tabla-colores">
                        <table class="table table-bordered">            
                            <thead class="table-dark">
                                <tr>
                                    <th>Significado</th>
                                    <th>Personalidad</th>
                                    <th>Adaptación al medio</th>
                                </tr>
                            </thead>
                            <tbody>
                                    <% 
                                    // Obtener todos los significados únicos
                                    const significadosUnicos = [...new Set([
                                        ...resultadosFase1.map(c => c.significado),
                                        ...resultadosFase2.map(c => c.significado)
                                    ])];
                            
                                    for (let significado of significadosUnicos) {
                                        const personalidad = resultadosFase1.find(c => c.significado === significado);
                                        const adaptacion = resultadosFase2.find(c => c.significado === significado);
                                    %>
                                        <tr>
                                            <td><%= significado %></td>
                                            <td><%= personalidad ? personalidad.porcentaje + '%' : '0%' %></td>
                                            <td><%= adaptacion ? adaptacion.porcentaje + '%' : '0%' %></td>
                                        </tr>
                                    <% } %>
                            </tbody>
                        </table>                            
                    </div>
                </div>
            </div>
            <div><%=  %>
                <a class="btn btn-color--third boton-regresar-abajo"
                href="/psicologo/cuadernillo-colores/<%= idGrupo %>/<%= idAspirante %>/<%= idInstitucion %>"
                >Regresar</a>
            </div>
        </div>
        
    </div>


    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Incluir el script del navside -->
    <script src="/js/_navside.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const datosFase1 = <%- JSON.stringify(resultadosFase1) %>; // Personalidad
        const datosFase2 = <%- JSON.stringify(resultadosFase2) %>; // Adaptación al medio

        // Obtener todos los significados únicos
        const todosSignificados = [
            ...new Set([
                ...datosFase1.map(c => c.significado),
                ...datosFase2.map(c => c.significado)
            ])
        ];

        const personalidadData = todosSignificados.map(significado => {
            const item = datosFase1.find(c => c.significado === significado);
            return item ? item.porcentaje : 0;
        });

        const adaptacionData = todosSignificados.map(significado => {
            const item = datosFase2.find(c => c.significado === significado);
            return item ? item.porcentaje : 0;
        });

        const ctx = document.getElementById('graficaMixta');
        const mixedChart = new Chart(ctx, {
            data: {
                labels: todosSignificados,
                datasets: [
                    {
                        type: 'bar',
                        label: 'Personalidad',
                        data: personalidadData,
                        backgroundColor: 'rgba(0, 102, 204, 0.7)',
                        borderColor: 'rgba(0, 102, 204, 1)',
                        borderWidth: 1
                    },
                    {
                        type: 'bar',
                        label: 'Adaptación al medio',
                        data: adaptacionData,
                        borderColor: 'rgba(100, 149, 237, 1)',
                        backgroundColor: 'rgba(100, 149, 237, 0.3)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Comparación: Personalidad vs Adaptación al medio'
                    }
                },
                scales: {
                    y: {
                        min: 0,
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });
    </script>

</body>
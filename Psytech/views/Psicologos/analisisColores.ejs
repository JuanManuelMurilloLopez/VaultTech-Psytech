<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analisis Colores</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Link css -->
    <link rel="stylesheet" href="/css/psicologos/analisisColores.css">
    <!-- CSS navside -->
    <link rel="stylesheet" href="/css/includeCss/_navsidePsicologo.css">
    <!-- CSS cerrar sesión -->
    <link rel="stylesheet" href="/css/includeCss/_buttonCerrarSesion.css">
</head>
<body class="">
    <div class="main">
        <%- include('../includes/_navsidePsicologo.ejs') %>
        <div class="container">
            <%- include('../includes/_buttonCerrarSesion.ejs') %>
            <h1 class="text-center">Análisis Prueba Colores</h1> <br>
            
            <!-- Fases de colores -->
            <div class="prueba-colores-container">
                <h5 class="titulo-seccion">Selección Por Fases</h5>
                <hr>

                <h2 class="fase-titulo">Fase 1</h2>
                <div class="colores-row">
                    <% for(let i = 0; i < 8; i++) { %>
                        <div class="color-item-container">
                            <% 
                            const colorEnPosicion = seleccionesFase1.find(s => s.posicion === i);
                            %>
                            <div class="color-box" data-color="<%= colorEnPosicion ? colorEnPosicion.hexColor : '#f8f9fa' %>"></div>
                            <div class="color-number"><%= colorEnPosicion ? colorEnPosicion.numeroColor : '-' %></div>
                        </div>
                    <% } %>
                </div>
                
                <h2 class="fase-titulo">Fase 2</h2>
                <div class="colores-row">
                    <% for(let i = 0; i < 8; i++) { %>
                        <div class="color-item-container">
                            <% 
                            const colorEnPosicion = seleccionesFase2.find(s => s.posicion === i);
                            %>
                            <div class="color-box" data-color="<%= colorEnPosicion ? colorEnPosicion.hexColor : '#f8f9fa' %>"></div>
                            <div class="color-number"><%= colorEnPosicion ? colorEnPosicion.numeroColor : '-' %></div>
                        </div>
                    <% } %>
                </div>
            </div>
            
            <!-- Seccion de movilidad -->
            <div class="movilidad-container">
                <h5 class="titulo-seccion">Análisis de Movilidad</h5>
                <hr>
                
                <div class="row g-4">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header text-white">
                                <h5 class="card-title mb-0">Resultado de Movilidad</h5>
                            </div>
                            <div class="card-body">
                                <p class="card-text">Positivos: +<%= movilidad.positivos %></p>
                                <p class="card-text">Negativos: -<%= movilidad.negativos %></p>
                                <h4 class="resultado-movilidad">MOVILIDAD = (+<%= movilidad.positivos %> -<%= movilidad.negativos %>)</h4>
                                <h3 class="interpretacion-movilidad"><%= interpretacionMovilidad %></h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <h3 class="fw-bolder">Personalidad y Adaptación al medio</h3>
            </div>
            
            <div class="row g-4 align-items-start">
                <div class="col-md-7">
                    <canvas id="graficaMixta"></canvas>
                </div>
                <div class="col-md-5">
                    <div class="tabla-colores">
                        <table class="table table-bordered">            
                            <thead class="table-dark">
                                <tr>
                                    <th>Significado</th>
                                    <th>Personalidad</th>
                                    <th>Adaptación al medio</th>
                                </tr>
                            </thead>
                            <tbody>
                                    <%
                                    const todosSignificados = [
                                        "Participación",
                                        "Paciencia",
                                        "Productividad",
                                        "Empuje/Agresividad",
                                        "Sociabilidad",
                                        "Creatividad",
                                        "Vigor",
                                        "Satisfacción"
                                    ];
                                
                                    for (let significado of todosSignificados) {
                                        const personalidad = resultadosFase1.find(c => c.significado === significado);
                                        const adaptacion = resultadosFase2.find(c => c.significado === significado);
                                %>
                                    <tr>
                                        <td><%= significado %></td>
                                        <td><%= personalidad ? personalidad.porcentaje + '%' : '0%' %></td>
                                        <td><%= adaptacion ? adaptacion.porcentaje + '%' : '0%' %></td>
                                    </tr>
                                <% } %>
                                
                            </tbody>
                        </table>                            
                    </div>
                </div>
            </div>

            <!-- resultado.ejs -->
            <div class="container mt-4">
                <h2 class="mb-4">Interpretaciones de combinaciones</h2>
                <% parejas.forEach(c => { 
                    const mostrarFase1 = c.zonas.fase1 && c.zonas.fase1 !== 'N/A';
                    const mostrarFase2 = c.zonas.fase2 && c.zonas.fase2 !== 'N/A';
                %>
                    <div class="card mb-3">
                        <div class="card-header">
                            Pareja: <%= c.pareja %> — Zonas: 
                            <% if (mostrarFase1) { %><%= c.zonas.fase1 %><% } else { %>N/A<% } %>
                            <% if (mostrarFase2) { %> / <%= c.zonas.fase2 %><% } %>
                        </div>
                        <div class="card-body">
                            <% if (mostrarFase1) { %>
                                <p><%= c.texto.fase1 %></p>
                            <% } %>
                            <% if (mostrarFase2) { %>
                                <p><%= c.texto.fase2 %></p>
                            <% } %>
                            <% if (!mostrarFase1 && !mostrarFase2) { %>
                                <p><em>Interpretación no disponible para esta combinación.</em></p>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>           

            <div class="boton-container">
                <a class="btn btn-color--third boton-regresar-abajo"
                href="/psicologo/cuadernillo-colores/<%= idGrupo %>/<%= idAspirante %>/<%= idInstitucion %>"
                >Regresar</a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Incluir el script del navside -->
    <script src="/js/_navside.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const datosFase1 = <%- JSON.stringify(resultadosFase1) %>; // Personalidad
        const datosFase2 = <%- JSON.stringify(resultadosFase2) %>; // Adaptación al medio

        // Obtener todos los significados únicos
        const todosSignificados = [
            "Participación",
            "Paciencia",
            "Productividad",
            "Empuje/Agresividad",
            "Sociabilidad",
            "Creatividad",
            "Vigor",
            "Satisfacción"
        ];

        const personalidadData = todosSignificados.map(significado => {
            const item = datosFase1.find(c => c.significado === significado);
            return item ? item.porcentaje : 0;
        });

        const adaptacionData = todosSignificados.map(significado => {
            const item = datosFase2.find(c => c.significado === significado);
            return item ? item.porcentaje : 0;
        });

        const ctx = document.getElementById('graficaMixta');
        const mixedChart = new Chart(ctx, {
            data: {
                labels: todosSignificados,
                datasets: [
                    {
                        type: 'bar',
                        label: 'Personalidad',
                        data: personalidadData,
                        backgroundColor: 'rgba(0, 102, 204, 0.7)',
                        borderColor: 'rgba(0, 102, 204, 1)',
                        borderWidth: 1
                    },
                    {
                        type: 'bar',
                        label: 'Adaptación al medio',
                        data: adaptacionData,
                        borderColor: 'rgba(100, 149, 237, 1)',
                        backgroundColor: 'rgba(100, 149, 237, 0.3)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Comparación: Personalidad vs Adaptación al medio'
                    }
                },
                scales: {
                    y: {
                        min: 0,
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });
    </script>

    <!-- Poner colores desde data-color -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elegir todos los cuadros de color que tienen data-color
            const colorBoxes = document.querySelectorAll('.color-box[data-color]');
            
            // Pone el color de fondo
            colorBoxes.forEach(box => {
                box.style.backgroundColor = box.getAttribute('data-color');
            });
        });
    </script>
</body>
</html>